#!/bin/bash
    # inpath--Verifies that a specified program is either valid as is
    # or can be found in the PATH directory list

in_path()
{
    # Given a command and the PATH, tires to find the command 
    # returns 0 if found and executable; 1 if not.

    # Note that this temporarily modifies the IFS (internal field 
    # separator) but restores it upon completion.

    cmd=$1      ourpath=$2      result=1
    old_IFS=$IFS    IFS=":"

    
    for directory in $ourpath # goes through each dir in $PATH
    do
        #echo $directory/$cmd
        if [ -x $directory/$cmd ] ; then
            result=0 # If we're here, we found the command
        fi
    done

    IFS=$old_IFS
    return $result
}

check_for_cmd_in_path()
{
    var=$1

    if [ "$var" != "" ] ; then              # checks if empty
        if [ "${var:0:1}" = "/" ] ; then    # checks if the first char is "/"
            if [ ! -x $var ] ; then         # check if file exists with "-x"
                return 1
            fi
        elif ! in_path $var "$PATH" ; then
            return 2
        fi
    fi

}

if [ $# -ne 1 ] ; then 
    echo "Usage: $0 command" >&2
    exit 1
fi

#echo $BASH_SOURCE
check_for_cmd_in_path "$1"

case $? in 
 0 ) echo "$1 found in PATH"    ;;
 1 ) echo "$1 not found or nor executable"  ;;
 2 ) echo "$1 not found in PATH"    ;;
esac

exit 0
